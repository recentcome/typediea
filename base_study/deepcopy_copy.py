import copy

# 定义一个列表 其中第一个元素是可变类型。
list1 = [[1, 2], 'fiw', 66]
# 进行浅copy
list2 = copy.copy(list1)
print(id(list1))
print(id(list2))
# 2140163723072
# 2140163721280
# 结果：不同

# 第一个元素地址是否相同
print(id(list1[0]))
print(id(list2[0]))

# 结果，相同
# 2300956297920
# 2300956297920
# 第二个元素地址是否相同
print(id(list1[1]))
print(id(list2[1]))
# 结果，相同
# 1894896075568
# 1894896075568

# 改变第一个值，查看复制对象变化
list1[0].append(3)
print(list1)
print(list2)
# 修改第一个值，复制前后，数值是同步修改的
# [[1, 2, 3], 'fiw', 66]
# [[1, 2, 3], 'fiw', 66]
# 改变第二个值，查看复制对象变化
list1[1] = 'wwp'
print(list1)
print(list2)
# 复制后，list1被修改，但是list2还是原值

# 总结： 浅拷贝，会对可变类型值进行修改，但是不可变类型的不会修改。
# 可变类型有： 列表、对象、元组

# 官方一点的解释是：浅拷贝后，改变原始对象中为可变类型的元素的值，会同时影响拷贝对象；改变原始对象中为不可变类型的元素的值，不会响拷贝对象。

################################################################################################
################################################################################################
################################################################################################
################################################################################################
################################################################################################


# 深拷贝
# 定义一个列表，第一个元素是可变类型
lista = [[1, 2, 3], 'fing', 1234]
# 进行深copy
listb = copy.deepcopy(lista)
# 对象地址是否相同
print(id(lista))
print(id(listb))
# 地址不同
# 1980490506304
# 1980490499904
# 第一个元素地址是否相同
print(id(lista[0]))
print(id(listb[0]))
# 2686932214144
# 2686932360384
# 地址不同
# 第二个元素地址是否相同
print(id(lista[1]))
print(id(listb[1]))
# 2686931128048
# 2686931128048
# 地址相同
# 改变第一个值，查看复制对象变化
lista[0].append(55)
print(lista)
print(listb)
# [[1, 2, 3, 55], 'fing', 1234]
# [[1, 2, 3], 'fing', 1234]
# 复制对象还是原值，未做修改
# 改变第二个值，查看复制对象变化
lista[1] = 'wang'
print(lista)
print(listb)
# [[1, 2, 3, 55], 'wang', 1234]
# [[1, 2, 3], 'fing', 1234]
# 复制对象还是原值，未做修改
# 深拷贝不会修改原值，
# 官方解释 ： 深拷贝，除了顶层拷贝，还对子元素也进行了拷贝。经过深拷贝后，原始对象和拷贝对象所有的可变元素地址都没有相同的了。
